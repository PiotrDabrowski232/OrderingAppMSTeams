// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderingApp.Data.DBConfig;

#nullable disable

namespace OrderingApp.Data.Migrations
{
    [DbContext(typeof(OrderingDbContext))]
    partial class OrderingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderingApp.Data.Models.Dish", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000001-0000-0000-0000-000000000000"),
                            Description = "Spicy stir-fried chicken with peanuts and vegetables.",
                            Name = "Kung Pao Chicken",
                            Price = 10.99f,
                            RestaurantId = new Guid("00000001-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000002-0000-0000-0000-000000000000"),
                            Description = "Crispy pork in sweet and sour sauce with bell peppers and pineapple.",
                            Name = "Sweet and Sour Pork",
                            Price = 9.99f,
                            RestaurantId = new Guid("00000001-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000003-0000-0000-0000-000000000000"),
                            Description = "Stir-fried noodles with vegetables and your choice of meat.",
                            Name = "Chow Mein",
                            Price = 8.99f,
                            RestaurantId = new Guid("00000001-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000004-0000-0000-0000-000000000000"),
                            Description = "Crispy rolls filled with vegetables and served with dipping sauce.",
                            Name = "Spring Rolls",
                            Price = 5.99f,
                            RestaurantId = new Guid("00000001-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000005-0000-0000-0000-000000000000"),
                            Description = "Fried rice with eggs, peas, and carrots.",
                            Name = "Egg Fried Rice",
                            Price = 4.99f,
                            RestaurantId = new Guid("00000001-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000006-0000-0000-0000-000000000000"),
                            Description = "Classic pizza with tomato, mozzarella, and fresh basil.",
                            Name = "Margherita Pizza",
                            Price = 12.99f,
                            RestaurantId = new Guid("00000002-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000007-0000-0000-0000-000000000000"),
                            Description = "Layers of pasta with meat, cheese, and marinara sauce.",
                            Name = "Lasagna",
                            Price = 14.99f,
                            RestaurantId = new Guid("00000002-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000008-0000-0000-0000-000000000000"),
                            Description = "Penne pasta in a spicy tomato sauce with garlic.",
                            Name = "Penne Arrabbiata",
                            Price = 11.99f,
                            RestaurantId = new Guid("00000002-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000009-0000-0000-0000-000000000000"),
                            Description = "Coffee-flavored dessert with mascarpone cheese.",
                            Name = "Tiramisu",
                            Price = 6.99f,
                            RestaurantId = new Guid("00000002-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("0000000a-0000-0000-0000-000000000000"),
                            Description = "Toasted bread topped with garlic butter and parsley.",
                            Name = "Garlic Bread",
                            Price = 3.99f,
                            RestaurantId = new Guid("00000002-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("0000000b-0000-0000-0000-000000000000"),
                            Description = "Juicy beef patty with cheese, lettuce, and tomato.",
                            Name = "Cheeseburger",
                            Price = 9.99f,
                            RestaurantId = new Guid("00000003-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("0000000c-0000-0000-0000-000000000000"),
                            Description = "Crispy golden fries served with ketchup.",
                            Name = "Fries",
                            Price = 2.99f,
                            RestaurantId = new Guid("00000003-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("0000000d-0000-0000-0000-000000000000"),
                            Description = "Breaded chicken pieces served with dipping sauce.",
                            Name = "Chicken Nuggets",
                            Price = 6.99f,
                            RestaurantId = new Guid("00000003-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("0000000e-0000-0000-0000-000000000000"),
                            Description = "Creamy milkshake available in chocolate or vanilla.",
                            Name = "Milkshake",
                            Price = 4.99f,
                            RestaurantId = new Guid("00000003-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("0000000f-0000-0000-0000-000000000000"),
                            Description = "Crispy onion rings with a side of ranch dressing.",
                            Name = "Onion Rings",
                            Price = 3.99f,
                            RestaurantId = new Guid("00000003-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000010-0000-0000-0000-000000000000"),
                            Description = "Pork tacos with pineapple, onion, and cilantro.",
                            Name = "Taco al Pastor",
                            Price = 3.5f,
                            RestaurantId = new Guid("00000004-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000011-0000-0000-0000-000000000000"),
                            Description = "Burrito filled with beans, rice, and fresh vegetables.",
                            Name = "Vegetarian Burrito",
                            Price = 8.99f,
                            RestaurantId = new Guid("00000004-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000012-0000-0000-0000-000000000000"),
                            Description = "Grilled tortilla filled with cheese and served with salsa.",
                            Name = "Quesadilla",
                            Price = 6.99f,
                            RestaurantId = new Guid("00000004-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000013-0000-0000-0000-000000000000"),
                            Description = "Grilled corn topped with cheese and chili powder.",
                            Name = "Elote (Corn on the Cob)",
                            Price = 4.5f,
                            RestaurantId = new Guid("00000004-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000014-0000-0000-0000-000000000000"),
                            Description = "Tortilla chips topped with cheese, jalapenos, and guacamole.",
                            Name = "Nachos",
                            Price = 5.99f,
                            RestaurantId = new Guid("00000004-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000015-0000-0000-0000-000000000000"),
                            Description = "Toasted bread topped with mashed avocado and poached egg.",
                            Name = "Avocado Toast",
                            Price = 7.99f,
                            RestaurantId = new Guid("00000005-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000016-0000-0000-0000-000000000000"),
                            Description = "Rich espresso topped with steamed milk and foam.",
                            Name = "Cappuccino",
                            Price = 3.99f,
                            RestaurantId = new Guid("00000005-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000017-0000-0000-0000-000000000000"),
                            Description = "Crisp romaine lettuce with Caesar dressing and croutons.",
                            Name = "Caesar Salad",
                            Price = 6.99f,
                            RestaurantId = new Guid("00000005-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000018-0000-0000-0000-000000000000"),
                            Description = "Freshly baked muffin loaded with blueberries.",
                            Name = "Blueberry Muffin",
                            Price = 2.99f,
                            RestaurantId = new Guid("00000005-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("00000019-0000-0000-0000-000000000000"),
                            Description = "Chicken salad served on toasted bread with lettuce.",
                            Name = "Chicken Salad Sandwich",
                            Price = 8.99f,
                            RestaurantId = new Guid("00000005-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("OrderingApp.Data.Models.Restaurant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("FreeDeliveryFrom")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PriceForDelivery")
                        .HasColumnType("real");

                    b.Property<int>("RestaurantType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000001-0000-0000-0000-000000000000"),
                            FreeDeliveryFrom = 50f,
                            Name = "Panda Express",
                            PriceForDelivery = 25.5f,
                            RestaurantType = 0
                        },
                        new
                        {
                            Id = new Guid("00000002-0000-0000-0000-000000000000"),
                            FreeDeliveryFrom = 30f,
                            Name = "Joe's Pizza",
                            PriceForDelivery = 40.5f,
                            RestaurantType = 2
                        },
                        new
                        {
                            Id = new Guid("00000003-0000-0000-0000-000000000000"),
                            FreeDeliveryFrom = 25.5f,
                            Name = "Burger Shack",
                            PriceForDelivery = 20.5f,
                            RestaurantType = 3
                        },
                        new
                        {
                            Id = new Guid("00000004-0000-0000-0000-000000000000"),
                            FreeDeliveryFrom = 60f,
                            Name = "Street Tacos",
                            PriceForDelivery = 15.5f,
                            RestaurantType = 1
                        },
                        new
                        {
                            Id = new Guid("00000005-0000-0000-0000-000000000000"),
                            FreeDeliveryFrom = 19f,
                            Name = "The Cozy Cafe",
                            PriceForDelivery = 25.5f,
                            RestaurantType = 6
                        });
                });

            modelBuilder.Entity("OrderingApp.Data.Models.Dish", b =>
                {
                    b.HasOne("OrderingApp.Data.Models.Restaurant", "Restaurant")
                        .WithMany("Dishes")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("OrderingApp.Data.Models.Restaurant", b =>
                {
                    b.Navigation("Dishes");
                });
#pragma warning restore 612, 618
        }
    }
}
